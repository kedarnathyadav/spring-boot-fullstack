name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: kedarnath
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
      
      - name: List Files in Working Directory
        run: ls -la

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Deployment started :progress_bar: :spring:"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":docker: Image tag:${{ steps.build-number.outputs.BUILD_NUMBER }} pushed to https://hub.docker.com/layers/dkedarnath/kedarnath-api/"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Building with Maven :maven:"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -D docker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating the tag"
          cat Dockerrun.aws.json
          sed -i -E 's|(dkedarnath/kedarnath-api:)[^"]*|\1'${{ steps.build-number.outputs.BUILD_NUMBER }}'|' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating the tag"
          cat Dockerrun.aws.json

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":aws: Starting deployment to Elastic Beanstalk "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.sha }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":":githubloading: Committing to repo  "}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and Push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push

      - name: Send Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Deployment and commit completed :github_check_mark: :party_blob: - https://kedarnath-api-env.eba-9pwqzaur.us-east-1.elasticbeanstalk.com/"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Job status ${{ job.status }} "} ' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
